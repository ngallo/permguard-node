// source: proto/v1/pdp.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.policydecisionpoint.Action', null, global);
goog.exportSymbol('proto.policydecisionpoint.AuthorizationCheckRequest', null, global);
goog.exportSymbol('proto.policydecisionpoint.AuthorizationCheckResponse', null, global);
goog.exportSymbol('proto.policydecisionpoint.AuthorizationModelRequest', null, global);
goog.exportSymbol('proto.policydecisionpoint.ContextResponse', null, global);
goog.exportSymbol('proto.policydecisionpoint.Entities', null, global);
goog.exportSymbol('proto.policydecisionpoint.EvaluationRequest', null, global);
goog.exportSymbol('proto.policydecisionpoint.EvaluationResponse', null, global);
goog.exportSymbol('proto.policydecisionpoint.PolicyStore', null, global);
goog.exportSymbol('proto.policydecisionpoint.Principal', null, global);
goog.exportSymbol('proto.policydecisionpoint.ReasonResponse', null, global);
goog.exportSymbol('proto.policydecisionpoint.Resource', null, global);
goog.exportSymbol('proto.policydecisionpoint.Subject', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policydecisionpoint.PolicyStore = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.policydecisionpoint.PolicyStore, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policydecisionpoint.PolicyStore.displayName = 'proto.policydecisionpoint.PolicyStore';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policydecisionpoint.Principal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.policydecisionpoint.Principal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policydecisionpoint.Principal.displayName = 'proto.policydecisionpoint.Principal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policydecisionpoint.Entities = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.policydecisionpoint.Entities.repeatedFields_, null);
};
goog.inherits(proto.policydecisionpoint.Entities, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policydecisionpoint.Entities.displayName = 'proto.policydecisionpoint.Entities';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policydecisionpoint.Subject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.policydecisionpoint.Subject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policydecisionpoint.Subject.displayName = 'proto.policydecisionpoint.Subject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policydecisionpoint.Resource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.policydecisionpoint.Resource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policydecisionpoint.Resource.displayName = 'proto.policydecisionpoint.Resource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policydecisionpoint.Action = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.policydecisionpoint.Action, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policydecisionpoint.Action.displayName = 'proto.policydecisionpoint.Action';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policydecisionpoint.AuthorizationModelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.policydecisionpoint.AuthorizationModelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policydecisionpoint.AuthorizationModelRequest.displayName = 'proto.policydecisionpoint.AuthorizationModelRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policydecisionpoint.EvaluationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.policydecisionpoint.EvaluationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policydecisionpoint.EvaluationRequest.displayName = 'proto.policydecisionpoint.EvaluationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policydecisionpoint.AuthorizationCheckRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.policydecisionpoint.AuthorizationCheckRequest.repeatedFields_, null);
};
goog.inherits(proto.policydecisionpoint.AuthorizationCheckRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policydecisionpoint.AuthorizationCheckRequest.displayName = 'proto.policydecisionpoint.AuthorizationCheckRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policydecisionpoint.ReasonResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.policydecisionpoint.ReasonResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policydecisionpoint.ReasonResponse.displayName = 'proto.policydecisionpoint.ReasonResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policydecisionpoint.ContextResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.policydecisionpoint.ContextResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policydecisionpoint.ContextResponse.displayName = 'proto.policydecisionpoint.ContextResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policydecisionpoint.EvaluationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.policydecisionpoint.EvaluationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policydecisionpoint.EvaluationResponse.displayName = 'proto.policydecisionpoint.EvaluationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.policydecisionpoint.AuthorizationCheckResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.policydecisionpoint.AuthorizationCheckResponse.repeatedFields_, null);
};
goog.inherits(proto.policydecisionpoint.AuthorizationCheckResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.policydecisionpoint.AuthorizationCheckResponse.displayName = 'proto.policydecisionpoint.AuthorizationCheckResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policydecisionpoint.PolicyStore.prototype.toObject = function(opt_includeInstance) {
  return proto.policydecisionpoint.PolicyStore.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policydecisionpoint.PolicyStore} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.PolicyStore.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policydecisionpoint.PolicyStore}
 */
proto.policydecisionpoint.PolicyStore.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policydecisionpoint.PolicyStore;
  return proto.policydecisionpoint.PolicyStore.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policydecisionpoint.PolicyStore} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policydecisionpoint.PolicyStore}
 */
proto.policydecisionpoint.PolicyStore.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policydecisionpoint.PolicyStore.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policydecisionpoint.PolicyStore.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policydecisionpoint.PolicyStore} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.PolicyStore.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string Kind = 1;
 * @return {string}
 */
proto.policydecisionpoint.PolicyStore.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.PolicyStore} returns this
 */
proto.policydecisionpoint.PolicyStore.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ID = 2;
 * @return {string}
 */
proto.policydecisionpoint.PolicyStore.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.PolicyStore} returns this
 */
proto.policydecisionpoint.PolicyStore.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policydecisionpoint.Principal.prototype.toObject = function(opt_includeInstance) {
  return proto.policydecisionpoint.Principal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policydecisionpoint.Principal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.Principal.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    source: jspb.Message.getFieldWithDefault(msg, 3, ""),
    identitytoken: jspb.Message.getFieldWithDefault(msg, 4, ""),
    accesstoken: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policydecisionpoint.Principal}
 */
proto.policydecisionpoint.Principal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policydecisionpoint.Principal;
  return proto.policydecisionpoint.Principal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policydecisionpoint.Principal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policydecisionpoint.Principal}
 */
proto.policydecisionpoint.Principal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentitytoken(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesstoken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policydecisionpoint.Principal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policydecisionpoint.Principal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policydecisionpoint.Principal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.Principal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string Type = 1;
 * @return {string}
 */
proto.policydecisionpoint.Principal.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.Principal} returns this
 */
proto.policydecisionpoint.Principal.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ID = 2;
 * @return {string}
 */
proto.policydecisionpoint.Principal.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.Principal} returns this
 */
proto.policydecisionpoint.Principal.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Source = 3;
 * @return {string}
 */
proto.policydecisionpoint.Principal.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.Principal} returns this
 */
proto.policydecisionpoint.Principal.prototype.setSource = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.policydecisionpoint.Principal} returns this
 */
proto.policydecisionpoint.Principal.prototype.clearSource = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.Principal.prototype.hasSource = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string IdentityToken = 4;
 * @return {string}
 */
proto.policydecisionpoint.Principal.prototype.getIdentitytoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.Principal} returns this
 */
proto.policydecisionpoint.Principal.prototype.setIdentitytoken = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.policydecisionpoint.Principal} returns this
 */
proto.policydecisionpoint.Principal.prototype.clearIdentitytoken = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.Principal.prototype.hasIdentitytoken = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string AccessToken = 5;
 * @return {string}
 */
proto.policydecisionpoint.Principal.prototype.getAccesstoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.Principal} returns this
 */
proto.policydecisionpoint.Principal.prototype.setAccesstoken = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.policydecisionpoint.Principal} returns this
 */
proto.policydecisionpoint.Principal.prototype.clearAccesstoken = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.Principal.prototype.hasAccesstoken = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.policydecisionpoint.Entities.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policydecisionpoint.Entities.prototype.toObject = function(opt_includeInstance) {
  return proto.policydecisionpoint.Entities.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policydecisionpoint.Entities} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.Entities.toObject = function(includeInstance, msg) {
  var f, obj = {
    schema: jspb.Message.getFieldWithDefault(msg, 1, ""),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    google_protobuf_struct_pb.Struct.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policydecisionpoint.Entities}
 */
proto.policydecisionpoint.Entities.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policydecisionpoint.Entities;
  return proto.policydecisionpoint.Entities.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policydecisionpoint.Entities} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policydecisionpoint.Entities}
 */
proto.policydecisionpoint.Entities.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchema(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policydecisionpoint.Entities.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policydecisionpoint.Entities.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policydecisionpoint.Entities} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.Entities.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchema();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Schema = 1;
 * @return {string}
 */
proto.policydecisionpoint.Entities.prototype.getSchema = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.Entities} returns this
 */
proto.policydecisionpoint.Entities.prototype.setSchema = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated google.protobuf.Struct Items = 2;
 * @return {!Array<!proto.google.protobuf.Struct>}
 */
proto.policydecisionpoint.Entities.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.google.protobuf.Struct>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {!Array<!proto.google.protobuf.Struct>} value
 * @return {!proto.policydecisionpoint.Entities} returns this
*/
proto.policydecisionpoint.Entities.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.protobuf.Struct=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Struct}
 */
proto.policydecisionpoint.Entities.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.protobuf.Struct, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.policydecisionpoint.Entities} returns this
 */
proto.policydecisionpoint.Entities.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policydecisionpoint.Subject.prototype.toObject = function(opt_includeInstance) {
  return proto.policydecisionpoint.Subject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policydecisionpoint.Subject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.Subject.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    source: jspb.Message.getFieldWithDefault(msg, 3, ""),
    properties: (f = msg.getProperties()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policydecisionpoint.Subject}
 */
proto.policydecisionpoint.Subject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policydecisionpoint.Subject;
  return proto.policydecisionpoint.Subject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policydecisionpoint.Subject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policydecisionpoint.Subject}
 */
proto.policydecisionpoint.Subject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 4:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policydecisionpoint.Subject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policydecisionpoint.Subject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policydecisionpoint.Subject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.Subject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProperties();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Type = 1;
 * @return {string}
 */
proto.policydecisionpoint.Subject.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.Subject} returns this
 */
proto.policydecisionpoint.Subject.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ID = 2;
 * @return {string}
 */
proto.policydecisionpoint.Subject.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.Subject} returns this
 */
proto.policydecisionpoint.Subject.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Source = 3;
 * @return {string}
 */
proto.policydecisionpoint.Subject.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.Subject} returns this
 */
proto.policydecisionpoint.Subject.prototype.setSource = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.policydecisionpoint.Subject} returns this
 */
proto.policydecisionpoint.Subject.prototype.clearSource = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.Subject.prototype.hasSource = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Struct Properties = 4;
 * @return {?proto.google.protobuf.Struct}
 */
proto.policydecisionpoint.Subject.prototype.getProperties = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 4));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.policydecisionpoint.Subject} returns this
*/
proto.policydecisionpoint.Subject.prototype.setProperties = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policydecisionpoint.Subject} returns this
 */
proto.policydecisionpoint.Subject.prototype.clearProperties = function() {
  return this.setProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.Subject.prototype.hasProperties = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policydecisionpoint.Resource.prototype.toObject = function(opt_includeInstance) {
  return proto.policydecisionpoint.Resource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policydecisionpoint.Resource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.Resource.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    properties: (f = msg.getProperties()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policydecisionpoint.Resource}
 */
proto.policydecisionpoint.Resource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policydecisionpoint.Resource;
  return proto.policydecisionpoint.Resource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policydecisionpoint.Resource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policydecisionpoint.Resource}
 */
proto.policydecisionpoint.Resource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policydecisionpoint.Resource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policydecisionpoint.Resource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policydecisionpoint.Resource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.Resource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProperties();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Type = 1;
 * @return {string}
 */
proto.policydecisionpoint.Resource.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.Resource} returns this
 */
proto.policydecisionpoint.Resource.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ID = 2;
 * @return {string}
 */
proto.policydecisionpoint.Resource.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.Resource} returns this
 */
proto.policydecisionpoint.Resource.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Struct Properties = 3;
 * @return {?proto.google.protobuf.Struct}
 */
proto.policydecisionpoint.Resource.prototype.getProperties = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 3));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.policydecisionpoint.Resource} returns this
*/
proto.policydecisionpoint.Resource.prototype.setProperties = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policydecisionpoint.Resource} returns this
 */
proto.policydecisionpoint.Resource.prototype.clearProperties = function() {
  return this.setProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.Resource.prototype.hasProperties = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policydecisionpoint.Action.prototype.toObject = function(opt_includeInstance) {
  return proto.policydecisionpoint.Action.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policydecisionpoint.Action} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.Action.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    properties: (f = msg.getProperties()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policydecisionpoint.Action}
 */
proto.policydecisionpoint.Action.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policydecisionpoint.Action;
  return proto.policydecisionpoint.Action.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policydecisionpoint.Action} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policydecisionpoint.Action}
 */
proto.policydecisionpoint.Action.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policydecisionpoint.Action.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policydecisionpoint.Action.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policydecisionpoint.Action} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.Action.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProperties();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Name = 1;
 * @return {string}
 */
proto.policydecisionpoint.Action.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.Action} returns this
 */
proto.policydecisionpoint.Action.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Struct Properties = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.policydecisionpoint.Action.prototype.getProperties = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.policydecisionpoint.Action} returns this
*/
proto.policydecisionpoint.Action.prototype.setProperties = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policydecisionpoint.Action} returns this
 */
proto.policydecisionpoint.Action.prototype.clearProperties = function() {
  return this.setProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.Action.prototype.hasProperties = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policydecisionpoint.AuthorizationModelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.policydecisionpoint.AuthorizationModelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policydecisionpoint.AuthorizationModelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.AuthorizationModelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    zoneid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    policystore: (f = msg.getPolicystore()) && proto.policydecisionpoint.PolicyStore.toObject(includeInstance, f),
    principal: (f = msg.getPrincipal()) && proto.policydecisionpoint.Principal.toObject(includeInstance, f),
    entities: (f = msg.getEntities()) && proto.policydecisionpoint.Entities.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policydecisionpoint.AuthorizationModelRequest}
 */
proto.policydecisionpoint.AuthorizationModelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policydecisionpoint.AuthorizationModelRequest;
  return proto.policydecisionpoint.AuthorizationModelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policydecisionpoint.AuthorizationModelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policydecisionpoint.AuthorizationModelRequest}
 */
proto.policydecisionpoint.AuthorizationModelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setZoneid(value);
      break;
    case 2:
      var value = new proto.policydecisionpoint.PolicyStore;
      reader.readMessage(value,proto.policydecisionpoint.PolicyStore.deserializeBinaryFromReader);
      msg.setPolicystore(value);
      break;
    case 3:
      var value = new proto.policydecisionpoint.Principal;
      reader.readMessage(value,proto.policydecisionpoint.Principal.deserializeBinaryFromReader);
      msg.setPrincipal(value);
      break;
    case 4:
      var value = new proto.policydecisionpoint.Entities;
      reader.readMessage(value,proto.policydecisionpoint.Entities.deserializeBinaryFromReader);
      msg.setEntities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policydecisionpoint.AuthorizationModelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policydecisionpoint.AuthorizationModelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policydecisionpoint.AuthorizationModelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.AuthorizationModelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getZoneid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPolicystore();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.policydecisionpoint.PolicyStore.serializeBinaryToWriter
    );
  }
  f = message.getPrincipal();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.policydecisionpoint.Principal.serializeBinaryToWriter
    );
  }
  f = message.getEntities();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.policydecisionpoint.Entities.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 ZoneID = 1;
 * @return {number}
 */
proto.policydecisionpoint.AuthorizationModelRequest.prototype.getZoneid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.policydecisionpoint.AuthorizationModelRequest} returns this
 */
proto.policydecisionpoint.AuthorizationModelRequest.prototype.setZoneid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional PolicyStore PolicyStore = 2;
 * @return {?proto.policydecisionpoint.PolicyStore}
 */
proto.policydecisionpoint.AuthorizationModelRequest.prototype.getPolicystore = function() {
  return /** @type{?proto.policydecisionpoint.PolicyStore} */ (
    jspb.Message.getWrapperField(this, proto.policydecisionpoint.PolicyStore, 2));
};


/**
 * @param {?proto.policydecisionpoint.PolicyStore|undefined} value
 * @return {!proto.policydecisionpoint.AuthorizationModelRequest} returns this
*/
proto.policydecisionpoint.AuthorizationModelRequest.prototype.setPolicystore = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policydecisionpoint.AuthorizationModelRequest} returns this
 */
proto.policydecisionpoint.AuthorizationModelRequest.prototype.clearPolicystore = function() {
  return this.setPolicystore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.AuthorizationModelRequest.prototype.hasPolicystore = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Principal Principal = 3;
 * @return {?proto.policydecisionpoint.Principal}
 */
proto.policydecisionpoint.AuthorizationModelRequest.prototype.getPrincipal = function() {
  return /** @type{?proto.policydecisionpoint.Principal} */ (
    jspb.Message.getWrapperField(this, proto.policydecisionpoint.Principal, 3));
};


/**
 * @param {?proto.policydecisionpoint.Principal|undefined} value
 * @return {!proto.policydecisionpoint.AuthorizationModelRequest} returns this
*/
proto.policydecisionpoint.AuthorizationModelRequest.prototype.setPrincipal = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policydecisionpoint.AuthorizationModelRequest} returns this
 */
proto.policydecisionpoint.AuthorizationModelRequest.prototype.clearPrincipal = function() {
  return this.setPrincipal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.AuthorizationModelRequest.prototype.hasPrincipal = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Entities Entities = 4;
 * @return {?proto.policydecisionpoint.Entities}
 */
proto.policydecisionpoint.AuthorizationModelRequest.prototype.getEntities = function() {
  return /** @type{?proto.policydecisionpoint.Entities} */ (
    jspb.Message.getWrapperField(this, proto.policydecisionpoint.Entities, 4));
};


/**
 * @param {?proto.policydecisionpoint.Entities|undefined} value
 * @return {!proto.policydecisionpoint.AuthorizationModelRequest} returns this
*/
proto.policydecisionpoint.AuthorizationModelRequest.prototype.setEntities = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policydecisionpoint.AuthorizationModelRequest} returns this
 */
proto.policydecisionpoint.AuthorizationModelRequest.prototype.clearEntities = function() {
  return this.setEntities(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.AuthorizationModelRequest.prototype.hasEntities = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policydecisionpoint.EvaluationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.policydecisionpoint.EvaluationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policydecisionpoint.EvaluationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.EvaluationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subject: (f = msg.getSubject()) && proto.policydecisionpoint.Subject.toObject(includeInstance, f),
    resource: (f = msg.getResource()) && proto.policydecisionpoint.Resource.toObject(includeInstance, f),
    action: (f = msg.getAction()) && proto.policydecisionpoint.Action.toObject(includeInstance, f),
    context: (f = msg.getContext()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policydecisionpoint.EvaluationRequest}
 */
proto.policydecisionpoint.EvaluationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policydecisionpoint.EvaluationRequest;
  return proto.policydecisionpoint.EvaluationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policydecisionpoint.EvaluationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policydecisionpoint.EvaluationRequest}
 */
proto.policydecisionpoint.EvaluationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 2:
      var value = new proto.policydecisionpoint.Subject;
      reader.readMessage(value,proto.policydecisionpoint.Subject.deserializeBinaryFromReader);
      msg.setSubject(value);
      break;
    case 3:
      var value = new proto.policydecisionpoint.Resource;
      reader.readMessage(value,proto.policydecisionpoint.Resource.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    case 4:
      var value = new proto.policydecisionpoint.Action;
      reader.readMessage(value,proto.policydecisionpoint.Action.deserializeBinaryFromReader);
      msg.setAction(value);
      break;
    case 5:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policydecisionpoint.EvaluationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policydecisionpoint.EvaluationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policydecisionpoint.EvaluationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.EvaluationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubject();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.policydecisionpoint.Subject.serializeBinaryToWriter
    );
  }
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.policydecisionpoint.Resource.serializeBinaryToWriter
    );
  }
  f = message.getAction();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.policydecisionpoint.Action.serializeBinaryToWriter
    );
  }
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string RequestID = 1;
 * @return {string}
 */
proto.policydecisionpoint.EvaluationRequest.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.EvaluationRequest} returns this
 */
proto.policydecisionpoint.EvaluationRequest.prototype.setRequestid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.policydecisionpoint.EvaluationRequest} returns this
 */
proto.policydecisionpoint.EvaluationRequest.prototype.clearRequestid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.EvaluationRequest.prototype.hasRequestid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Subject Subject = 2;
 * @return {?proto.policydecisionpoint.Subject}
 */
proto.policydecisionpoint.EvaluationRequest.prototype.getSubject = function() {
  return /** @type{?proto.policydecisionpoint.Subject} */ (
    jspb.Message.getWrapperField(this, proto.policydecisionpoint.Subject, 2));
};


/**
 * @param {?proto.policydecisionpoint.Subject|undefined} value
 * @return {!proto.policydecisionpoint.EvaluationRequest} returns this
*/
proto.policydecisionpoint.EvaluationRequest.prototype.setSubject = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policydecisionpoint.EvaluationRequest} returns this
 */
proto.policydecisionpoint.EvaluationRequest.prototype.clearSubject = function() {
  return this.setSubject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.EvaluationRequest.prototype.hasSubject = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Resource Resource = 3;
 * @return {?proto.policydecisionpoint.Resource}
 */
proto.policydecisionpoint.EvaluationRequest.prototype.getResource = function() {
  return /** @type{?proto.policydecisionpoint.Resource} */ (
    jspb.Message.getWrapperField(this, proto.policydecisionpoint.Resource, 3));
};


/**
 * @param {?proto.policydecisionpoint.Resource|undefined} value
 * @return {!proto.policydecisionpoint.EvaluationRequest} returns this
*/
proto.policydecisionpoint.EvaluationRequest.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policydecisionpoint.EvaluationRequest} returns this
 */
proto.policydecisionpoint.EvaluationRequest.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.EvaluationRequest.prototype.hasResource = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Action Action = 4;
 * @return {?proto.policydecisionpoint.Action}
 */
proto.policydecisionpoint.EvaluationRequest.prototype.getAction = function() {
  return /** @type{?proto.policydecisionpoint.Action} */ (
    jspb.Message.getWrapperField(this, proto.policydecisionpoint.Action, 4));
};


/**
 * @param {?proto.policydecisionpoint.Action|undefined} value
 * @return {!proto.policydecisionpoint.EvaluationRequest} returns this
*/
proto.policydecisionpoint.EvaluationRequest.prototype.setAction = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policydecisionpoint.EvaluationRequest} returns this
 */
proto.policydecisionpoint.EvaluationRequest.prototype.clearAction = function() {
  return this.setAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.EvaluationRequest.prototype.hasAction = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Struct Context = 5;
 * @return {?proto.google.protobuf.Struct}
 */
proto.policydecisionpoint.EvaluationRequest.prototype.getContext = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 5));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.policydecisionpoint.EvaluationRequest} returns this
*/
proto.policydecisionpoint.EvaluationRequest.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policydecisionpoint.EvaluationRequest} returns this
 */
proto.policydecisionpoint.EvaluationRequest.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.EvaluationRequest.prototype.hasContext = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.policydecisionpoint.AuthorizationCheckRequest.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.policydecisionpoint.AuthorizationCheckRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policydecisionpoint.AuthorizationCheckRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.AuthorizationCheckRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizationmodel: (f = msg.getAuthorizationmodel()) && proto.policydecisionpoint.AuthorizationModelRequest.toObject(includeInstance, f),
    requestid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    subject: (f = msg.getSubject()) && proto.policydecisionpoint.Subject.toObject(includeInstance, f),
    resource: (f = msg.getResource()) && proto.policydecisionpoint.Resource.toObject(includeInstance, f),
    action: (f = msg.getAction()) && proto.policydecisionpoint.Action.toObject(includeInstance, f),
    context: (f = msg.getContext()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    evaluationsList: jspb.Message.toObjectList(msg.getEvaluationsList(),
    proto.policydecisionpoint.EvaluationRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policydecisionpoint.AuthorizationCheckRequest}
 */
proto.policydecisionpoint.AuthorizationCheckRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policydecisionpoint.AuthorizationCheckRequest;
  return proto.policydecisionpoint.AuthorizationCheckRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policydecisionpoint.AuthorizationCheckRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policydecisionpoint.AuthorizationCheckRequest}
 */
proto.policydecisionpoint.AuthorizationCheckRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.policydecisionpoint.AuthorizationModelRequest;
      reader.readMessage(value,proto.policydecisionpoint.AuthorizationModelRequest.deserializeBinaryFromReader);
      msg.setAuthorizationmodel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 3:
      var value = new proto.policydecisionpoint.Subject;
      reader.readMessage(value,proto.policydecisionpoint.Subject.deserializeBinaryFromReader);
      msg.setSubject(value);
      break;
    case 4:
      var value = new proto.policydecisionpoint.Resource;
      reader.readMessage(value,proto.policydecisionpoint.Resource.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    case 5:
      var value = new proto.policydecisionpoint.Action;
      reader.readMessage(value,proto.policydecisionpoint.Action.deserializeBinaryFromReader);
      msg.setAction(value);
      break;
    case 6:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    case 7:
      var value = new proto.policydecisionpoint.EvaluationRequest;
      reader.readMessage(value,proto.policydecisionpoint.EvaluationRequest.deserializeBinaryFromReader);
      msg.addEvaluations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policydecisionpoint.AuthorizationCheckRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policydecisionpoint.AuthorizationCheckRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.AuthorizationCheckRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizationmodel();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.policydecisionpoint.AuthorizationModelRequest.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubject();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.policydecisionpoint.Subject.serializeBinaryToWriter
    );
  }
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.policydecisionpoint.Resource.serializeBinaryToWriter
    );
  }
  f = message.getAction();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.policydecisionpoint.Action.serializeBinaryToWriter
    );
  }
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getEvaluationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.policydecisionpoint.EvaluationRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional AuthorizationModelRequest AuthorizationModel = 1;
 * @return {?proto.policydecisionpoint.AuthorizationModelRequest}
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.getAuthorizationmodel = function() {
  return /** @type{?proto.policydecisionpoint.AuthorizationModelRequest} */ (
    jspb.Message.getWrapperField(this, proto.policydecisionpoint.AuthorizationModelRequest, 1));
};


/**
 * @param {?proto.policydecisionpoint.AuthorizationModelRequest|undefined} value
 * @return {!proto.policydecisionpoint.AuthorizationCheckRequest} returns this
*/
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.setAuthorizationmodel = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policydecisionpoint.AuthorizationCheckRequest} returns this
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.clearAuthorizationmodel = function() {
  return this.setAuthorizationmodel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.hasAuthorizationmodel = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string RequestID = 2;
 * @return {string}
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.AuthorizationCheckRequest} returns this
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.setRequestid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.policydecisionpoint.AuthorizationCheckRequest} returns this
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.clearRequestid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.hasRequestid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Subject Subject = 3;
 * @return {?proto.policydecisionpoint.Subject}
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.getSubject = function() {
  return /** @type{?proto.policydecisionpoint.Subject} */ (
    jspb.Message.getWrapperField(this, proto.policydecisionpoint.Subject, 3));
};


/**
 * @param {?proto.policydecisionpoint.Subject|undefined} value
 * @return {!proto.policydecisionpoint.AuthorizationCheckRequest} returns this
*/
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.setSubject = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policydecisionpoint.AuthorizationCheckRequest} returns this
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.clearSubject = function() {
  return this.setSubject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.hasSubject = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Resource Resource = 4;
 * @return {?proto.policydecisionpoint.Resource}
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.getResource = function() {
  return /** @type{?proto.policydecisionpoint.Resource} */ (
    jspb.Message.getWrapperField(this, proto.policydecisionpoint.Resource, 4));
};


/**
 * @param {?proto.policydecisionpoint.Resource|undefined} value
 * @return {!proto.policydecisionpoint.AuthorizationCheckRequest} returns this
*/
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policydecisionpoint.AuthorizationCheckRequest} returns this
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.hasResource = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Action Action = 5;
 * @return {?proto.policydecisionpoint.Action}
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.getAction = function() {
  return /** @type{?proto.policydecisionpoint.Action} */ (
    jspb.Message.getWrapperField(this, proto.policydecisionpoint.Action, 5));
};


/**
 * @param {?proto.policydecisionpoint.Action|undefined} value
 * @return {!proto.policydecisionpoint.AuthorizationCheckRequest} returns this
*/
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.setAction = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policydecisionpoint.AuthorizationCheckRequest} returns this
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.clearAction = function() {
  return this.setAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.hasAction = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Struct Context = 6;
 * @return {?proto.google.protobuf.Struct}
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.getContext = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 6));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.policydecisionpoint.AuthorizationCheckRequest} returns this
*/
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policydecisionpoint.AuthorizationCheckRequest} returns this
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.hasContext = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated EvaluationRequest Evaluations = 7;
 * @return {!Array<!proto.policydecisionpoint.EvaluationRequest>}
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.getEvaluationsList = function() {
  return /** @type{!Array<!proto.policydecisionpoint.EvaluationRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.policydecisionpoint.EvaluationRequest, 7));
};


/**
 * @param {!Array<!proto.policydecisionpoint.EvaluationRequest>} value
 * @return {!proto.policydecisionpoint.AuthorizationCheckRequest} returns this
*/
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.setEvaluationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.policydecisionpoint.EvaluationRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.policydecisionpoint.EvaluationRequest}
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.addEvaluations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.policydecisionpoint.EvaluationRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.policydecisionpoint.AuthorizationCheckRequest} returns this
 */
proto.policydecisionpoint.AuthorizationCheckRequest.prototype.clearEvaluationsList = function() {
  return this.setEvaluationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policydecisionpoint.ReasonResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.policydecisionpoint.ReasonResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policydecisionpoint.ReasonResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.ReasonResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policydecisionpoint.ReasonResponse}
 */
proto.policydecisionpoint.ReasonResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policydecisionpoint.ReasonResponse;
  return proto.policydecisionpoint.ReasonResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policydecisionpoint.ReasonResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policydecisionpoint.ReasonResponse}
 */
proto.policydecisionpoint.ReasonResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policydecisionpoint.ReasonResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policydecisionpoint.ReasonResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policydecisionpoint.ReasonResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.ReasonResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string Code = 1;
 * @return {string}
 */
proto.policydecisionpoint.ReasonResponse.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.ReasonResponse} returns this
 */
proto.policydecisionpoint.ReasonResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Message = 2;
 * @return {string}
 */
proto.policydecisionpoint.ReasonResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.ReasonResponse} returns this
 */
proto.policydecisionpoint.ReasonResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policydecisionpoint.ContextResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.policydecisionpoint.ContextResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policydecisionpoint.ContextResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.ContextResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reasonadmin: (f = msg.getReasonadmin()) && proto.policydecisionpoint.ReasonResponse.toObject(includeInstance, f),
    reasonuser: (f = msg.getReasonuser()) && proto.policydecisionpoint.ReasonResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policydecisionpoint.ContextResponse}
 */
proto.policydecisionpoint.ContextResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policydecisionpoint.ContextResponse;
  return proto.policydecisionpoint.ContextResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policydecisionpoint.ContextResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policydecisionpoint.ContextResponse}
 */
proto.policydecisionpoint.ContextResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.policydecisionpoint.ReasonResponse;
      reader.readMessage(value,proto.policydecisionpoint.ReasonResponse.deserializeBinaryFromReader);
      msg.setReasonadmin(value);
      break;
    case 3:
      var value = new proto.policydecisionpoint.ReasonResponse;
      reader.readMessage(value,proto.policydecisionpoint.ReasonResponse.deserializeBinaryFromReader);
      msg.setReasonuser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policydecisionpoint.ContextResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policydecisionpoint.ContextResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policydecisionpoint.ContextResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.ContextResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReasonadmin();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.policydecisionpoint.ReasonResponse.serializeBinaryToWriter
    );
  }
  f = message.getReasonuser();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.policydecisionpoint.ReasonResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ID = 1;
 * @return {string}
 */
proto.policydecisionpoint.ContextResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.ContextResponse} returns this
 */
proto.policydecisionpoint.ContextResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ReasonResponse ReasonAdmin = 2;
 * @return {?proto.policydecisionpoint.ReasonResponse}
 */
proto.policydecisionpoint.ContextResponse.prototype.getReasonadmin = function() {
  return /** @type{?proto.policydecisionpoint.ReasonResponse} */ (
    jspb.Message.getWrapperField(this, proto.policydecisionpoint.ReasonResponse, 2));
};


/**
 * @param {?proto.policydecisionpoint.ReasonResponse|undefined} value
 * @return {!proto.policydecisionpoint.ContextResponse} returns this
*/
proto.policydecisionpoint.ContextResponse.prototype.setReasonadmin = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policydecisionpoint.ContextResponse} returns this
 */
proto.policydecisionpoint.ContextResponse.prototype.clearReasonadmin = function() {
  return this.setReasonadmin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.ContextResponse.prototype.hasReasonadmin = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ReasonResponse ReasonUser = 3;
 * @return {?proto.policydecisionpoint.ReasonResponse}
 */
proto.policydecisionpoint.ContextResponse.prototype.getReasonuser = function() {
  return /** @type{?proto.policydecisionpoint.ReasonResponse} */ (
    jspb.Message.getWrapperField(this, proto.policydecisionpoint.ReasonResponse, 3));
};


/**
 * @param {?proto.policydecisionpoint.ReasonResponse|undefined} value
 * @return {!proto.policydecisionpoint.ContextResponse} returns this
*/
proto.policydecisionpoint.ContextResponse.prototype.setReasonuser = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policydecisionpoint.ContextResponse} returns this
 */
proto.policydecisionpoint.ContextResponse.prototype.clearReasonuser = function() {
  return this.setReasonuser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.ContextResponse.prototype.hasReasonuser = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policydecisionpoint.EvaluationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.policydecisionpoint.EvaluationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policydecisionpoint.EvaluationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.EvaluationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    decision: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    requestid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    context: (f = msg.getContext()) && proto.policydecisionpoint.ContextResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policydecisionpoint.EvaluationResponse}
 */
proto.policydecisionpoint.EvaluationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policydecisionpoint.EvaluationResponse;
  return proto.policydecisionpoint.EvaluationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policydecisionpoint.EvaluationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policydecisionpoint.EvaluationResponse}
 */
proto.policydecisionpoint.EvaluationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDecision(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 3:
      var value = new proto.policydecisionpoint.ContextResponse;
      reader.readMessage(value,proto.policydecisionpoint.ContextResponse.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policydecisionpoint.EvaluationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policydecisionpoint.EvaluationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policydecisionpoint.EvaluationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.EvaluationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDecision();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.policydecisionpoint.ContextResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool Decision = 1;
 * @return {boolean}
 */
proto.policydecisionpoint.EvaluationResponse.prototype.getDecision = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.policydecisionpoint.EvaluationResponse} returns this
 */
proto.policydecisionpoint.EvaluationResponse.prototype.setDecision = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string RequestID = 2;
 * @return {string}
 */
proto.policydecisionpoint.EvaluationResponse.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.EvaluationResponse} returns this
 */
proto.policydecisionpoint.EvaluationResponse.prototype.setRequestid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.policydecisionpoint.EvaluationResponse} returns this
 */
proto.policydecisionpoint.EvaluationResponse.prototype.clearRequestid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.EvaluationResponse.prototype.hasRequestid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ContextResponse Context = 3;
 * @return {?proto.policydecisionpoint.ContextResponse}
 */
proto.policydecisionpoint.EvaluationResponse.prototype.getContext = function() {
  return /** @type{?proto.policydecisionpoint.ContextResponse} */ (
    jspb.Message.getWrapperField(this, proto.policydecisionpoint.ContextResponse, 3));
};


/**
 * @param {?proto.policydecisionpoint.ContextResponse|undefined} value
 * @return {!proto.policydecisionpoint.EvaluationResponse} returns this
*/
proto.policydecisionpoint.EvaluationResponse.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policydecisionpoint.EvaluationResponse} returns this
 */
proto.policydecisionpoint.EvaluationResponse.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.EvaluationResponse.prototype.hasContext = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.policydecisionpoint.AuthorizationCheckResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.policydecisionpoint.AuthorizationCheckResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.policydecisionpoint.AuthorizationCheckResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.policydecisionpoint.AuthorizationCheckResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.AuthorizationCheckResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    decision: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    requestid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    context: (f = msg.getContext()) && proto.policydecisionpoint.ContextResponse.toObject(includeInstance, f),
    evaluationsList: jspb.Message.toObjectList(msg.getEvaluationsList(),
    proto.policydecisionpoint.EvaluationResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.policydecisionpoint.AuthorizationCheckResponse}
 */
proto.policydecisionpoint.AuthorizationCheckResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.policydecisionpoint.AuthorizationCheckResponse;
  return proto.policydecisionpoint.AuthorizationCheckResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.policydecisionpoint.AuthorizationCheckResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.policydecisionpoint.AuthorizationCheckResponse}
 */
proto.policydecisionpoint.AuthorizationCheckResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDecision(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 3:
      var value = new proto.policydecisionpoint.ContextResponse;
      reader.readMessage(value,proto.policydecisionpoint.ContextResponse.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    case 4:
      var value = new proto.policydecisionpoint.EvaluationResponse;
      reader.readMessage(value,proto.policydecisionpoint.EvaluationResponse.deserializeBinaryFromReader);
      msg.addEvaluations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.policydecisionpoint.AuthorizationCheckResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.policydecisionpoint.AuthorizationCheckResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.policydecisionpoint.AuthorizationCheckResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.policydecisionpoint.AuthorizationCheckResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDecision();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.policydecisionpoint.ContextResponse.serializeBinaryToWriter
    );
  }
  f = message.getEvaluationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.policydecisionpoint.EvaluationResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool Decision = 1;
 * @return {boolean}
 */
proto.policydecisionpoint.AuthorizationCheckResponse.prototype.getDecision = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.policydecisionpoint.AuthorizationCheckResponse} returns this
 */
proto.policydecisionpoint.AuthorizationCheckResponse.prototype.setDecision = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string RequestID = 2;
 * @return {string}
 */
proto.policydecisionpoint.AuthorizationCheckResponse.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.policydecisionpoint.AuthorizationCheckResponse} returns this
 */
proto.policydecisionpoint.AuthorizationCheckResponse.prototype.setRequestid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.policydecisionpoint.AuthorizationCheckResponse} returns this
 */
proto.policydecisionpoint.AuthorizationCheckResponse.prototype.clearRequestid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.AuthorizationCheckResponse.prototype.hasRequestid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ContextResponse Context = 3;
 * @return {?proto.policydecisionpoint.ContextResponse}
 */
proto.policydecisionpoint.AuthorizationCheckResponse.prototype.getContext = function() {
  return /** @type{?proto.policydecisionpoint.ContextResponse} */ (
    jspb.Message.getWrapperField(this, proto.policydecisionpoint.ContextResponse, 3));
};


/**
 * @param {?proto.policydecisionpoint.ContextResponse|undefined} value
 * @return {!proto.policydecisionpoint.AuthorizationCheckResponse} returns this
*/
proto.policydecisionpoint.AuthorizationCheckResponse.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.policydecisionpoint.AuthorizationCheckResponse} returns this
 */
proto.policydecisionpoint.AuthorizationCheckResponse.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.policydecisionpoint.AuthorizationCheckResponse.prototype.hasContext = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated EvaluationResponse Evaluations = 4;
 * @return {!Array<!proto.policydecisionpoint.EvaluationResponse>}
 */
proto.policydecisionpoint.AuthorizationCheckResponse.prototype.getEvaluationsList = function() {
  return /** @type{!Array<!proto.policydecisionpoint.EvaluationResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.policydecisionpoint.EvaluationResponse, 4));
};


/**
 * @param {!Array<!proto.policydecisionpoint.EvaluationResponse>} value
 * @return {!proto.policydecisionpoint.AuthorizationCheckResponse} returns this
*/
proto.policydecisionpoint.AuthorizationCheckResponse.prototype.setEvaluationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.policydecisionpoint.EvaluationResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.policydecisionpoint.EvaluationResponse}
 */
proto.policydecisionpoint.AuthorizationCheckResponse.prototype.addEvaluations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.policydecisionpoint.EvaluationResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.policydecisionpoint.AuthorizationCheckResponse} returns this
 */
proto.policydecisionpoint.AuthorizationCheckResponse.prototype.clearEvaluationsList = function() {
  return this.setEvaluationsList([]);
};


goog.object.extend(exports, proto.policydecisionpoint);
